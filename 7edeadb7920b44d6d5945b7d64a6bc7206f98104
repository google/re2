{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a7e08ef0_f9640918",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5506
      },
      "writtenOn": "2021-01-20T01:27:22Z",
      "side": 1,
      "message": "\u003e Add a function version that allows reusing result string, thus eliminating extra allocations.\n\nCould you please explain (and quantify) the impact of this? I speculate that your use case involves long strings with many replacements and so your problem is actually that `out` starts off empty and then grows in N steps. If so, would it be approximately as effective to reserve `str-\u003esize()` bytes for `out` upfront? Currently, it doesn\u0027t seem like the extra complexity is worthwhile for upstream.\n",
      "revId": "7edeadb7920b44d6d5945b7d64a6bc7206f98104",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa"
    }
  ]
}