{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2d1a07e9_ce53a276",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5506
      },
      "writtenOn": "2021-09-28T14:39:41Z",
      "side": 1,
      "message": "Apart from the comment below, dynamic unloading isn\u0027t something that we aim to support, so you will probably have to carry this patch downstream.",
      "revId": "0311e0ee10e88e77f96eea2dec41fdd2afe70d2f",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "71f496ec_04d6b774",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 44212
      },
      "writtenOn": "2021-09-28T14:58:45Z",
      "side": 1,
      "message": "ok",
      "revId": "0311e0ee10e88e77f96eea2dec41fdd2afe70d2f",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a6ee080_b694a7dc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 44222
      },
      "writtenOn": "2021-09-28T17:31:27Z",
      "side": 1,
      "message": "Would it be accepted the destruction of the pointers (without unique_ptr) with atexit called inside the call_once initialization?",
      "parentUuid": "2d1a07e9_ce53a276",
      "revId": "0311e0ee10e88e77f96eea2dec41fdd2afe70d2f",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6ff7751b_93b36fa0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 44222
      },
      "writtenOn": "2021-09-28T17:31:27Z",
      "side": 1,
      "message": "Would it be accepted the destruction of the pointers (without unique_ptr) with atexit called inside the call_once initialization?",
      "revId": "0311e0ee10e88e77f96eea2dec41fdd2afe70d2f",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21e86b30_ac45bc8b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5506
      },
      "writtenOn": "2021-09-29T00:13:42Z",
      "side": 1,
      "message": "We need to support Linux, macOS and Windows at the very least; I occasionally hear about other operating systems as well. glibc has supported `atexit(3)` for dynamic unloading for 20+ years, apparently, but there are many other libc implementations out there, so unless there\u0027s some reason to expect this solution to work portably, I\u0027m afraid that, again, you will just have to carry this patch.",
      "parentUuid": "5a6ee080_b694a7dc",
      "revId": "0311e0ee10e88e77f96eea2dec41fdd2afe70d2f",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d43a02a8_e7a266f1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 44222
      },
      "writtenOn": "2021-09-29T10:10:38Z",
      "side": 1,
      "message": "I\u0027ve tested atexit in shared libraries in Linux, MacOS and Windows, all with recent toolchains. std::atexit is a standard C++ function (but so as destructions that you do not support).",
      "revId": "0311e0ee10e88e77f96eea2dec41fdd2afe70d2f",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7a63663_777c8a48",
        "filename": "re2/re2.cc",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 5506
      },
      "writtenOn": "2021-09-28T14:39:41Z",
      "side": 1,
      "message": "See https://google.github.io/styleguide/cppguide.html#Static_and_Global_Variables for why these are raw pointers.",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 66,
        "endChar": 75
      },
      "revId": "0311e0ee10e88e77f96eea2dec41fdd2afe70d2f",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa"
    }
  ]
}